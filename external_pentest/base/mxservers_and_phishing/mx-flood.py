#!/usr/bin/env python3

import os
import argparse
from ipaddress import ip_address

from sendemail import sendemail

email_text = """Hello,

This message doesn't carry any meaning.

This is a test message used for speeding up ip address of our email relay. It is done in the context of the service we provide.
If you get troubles with this letter, please contact our representative at {RET_ADDR} .

With regards,
External Pentest Team
"""

#######################################################################################################################
if __name__ == "__main__":

    os.environ['COLUMNS'] = "140"
    argparser = argparse.ArgumentParser(
        formatter_class=argparse.RawTextHelpFormatter,
        prog="Flood specified mail server with email.",
        description="This program is usually used to fill a queue at your special configured email with fake emails designed for customer's MX servers. The main idea is to speed up the IP-address of configured relay in front of customer's MX servers.\n\n   Easy choice: './prog.py --ip gophish.izoaz.ru -p 25 -n 100 -t mr.smith@infosec.ru -r security@infosec.ru'"
    )
    argparser.add_argument("--ip", type=ip_address, required=True, help="IP address of your relay (IPv4 or IPv6).")
    argparser.add_argument("-p", "--port", type=int, default=25, help="port number of your relay service.")
    argparser.add_argument("-n", "--num", type=int, default=1, help="Number of emails to be sent to relay queue.")
    argparser.add_argument("-f", "--from", type=str, default="infosec@izoaz.ru", help="Email 'From' address.", dest="afrom")
    argparser.add_argument("-t", "--to", type=str, required=True, help="Email 'To' address.")
    argparser.add_argument("-r", "--ret", type=str, required=True, help="Email address of our representative for replies and objections.")

    args = argparser.parse_args()

    with open("./email-templates/email-html-outlook-template.html") as fin:
        html_template = fin.read()

    email_text = email_text.replace("{RET_ADDR}", args.ret)
    email_html = html_template.replace("{TEXT}", email_text.replace('\n', '<br>'))
    
    for i in range(args.num):
        sendemail(args.ip, args.port, args.afrom, [args.to], "This is a test message", email_text, email_html)

    print("OK. emails have been sent.")
